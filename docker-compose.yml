services:
  mongodb:
    image: mongo:7
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: personal-context-router

  preference-service:
    build:
      context: .
      dockerfile: packages/preference-service/Dockerfile
    container_name: preference-service
    restart: unless-stopped
    ports:
      - "3001:3001"
      - "3002:3002"
    # Run compiled code (production mode; no live reload)
    command: npm run start:prod --workspace=@personal-context-router/preference-service
    environment:
      - PORT=3001
      - MICROSERVICE_PORT=3002
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/personal-context-router
    depends_on:
      - mongodb

  gateway:
    build:
      context: .
      dockerfile: packages/gateway/Dockerfile
    container_name: gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
    # Run compiled code (production mode; no live reload)
    command: npm run start:prod --workspace=@personal-context-router/gateway
    environment:
      - PORT=3000
      - NODE_ENV=development
      - PREFERENCE_SERVICE_HOST=preference-service
      - PREFERENCE_SERVICE_PORT=3002
    depends_on:
      - preference-service

  mcp-service:
    build:
      context: .
      dockerfile: packages/mcp-service/Dockerfile
    container_name: mcp-service
    restart: unless-stopped
    ports:
      - "3003:3003"
    # Run HTTP MCP server (production mode; no live reload)
    command: npm run start --workspace=@personal-context-router/mcp-service
    environment:
      - PORT=3003
      - NODE_ENV=development
      - GATEWAY_URL=http://gateway:3000
    depends_on:
      - gateway

volumes:
  mongodb_data:

networks:
  default:
    name: personal-context-router
